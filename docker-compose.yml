services:
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      - CSP_PROVISIONING_URL=${CSP_PROVISIONING_URL:-http://csp-provisioning:8081}
    depends_on:
      - api
      - csp-provisioning
    restart: unless-stopped

  web_admin:
    build:
      context: ./apps/web_admin
      dockerfile: Dockerfile
    ports:
      - '3010:3010'
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      - API_URL=${API_URL:-http://api:8080}
      - CSP_PROVISIONING_URL=${CSP_PROVISIONING_URL:-http://csp-provisioning:8081}
    depends_on:
      - api
      - csp-provisioning
    restart: unless-stopped

  csp-provisioning-web:
    build:
      context: ./apps/csp-provisioning-web
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=production
      - DOCKER_ENV=true
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3000}
    depends_on:
      - web
    restart: unless-stopped

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - GIN_MODE=release
      - DB_TYPE=postgres
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@db:5432/go_nextjs_db?sslmode=disable}
      - PORT=8080
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-this-in-production}
      - CSP_PROVISIONING_URL=http://csp-provisioning:8081
    depends_on:
      - db
      - csp-provisioning
    restart: unless-stopped

  csp-provisioning:
    build:
      context: ./apps/csp-provisioning-service
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    environment:
      - GIN_MODE=release
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-cgas-prod}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/firebase-service-account.json
      - PORT=8081
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-this-in-production}
      - MAIN_API_URL=http://api:8080
    volumes:
      - ${FIREBASE_CREDENTIALS_PATH:-./firebase-credentials}:/app/credentials:ro
    restart: unless-stopped

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-go_nextjs_db}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
